@page
@model ReportGenerationApp.Pages.IndexModel
@{
    ViewData["Title"] = "Report Generation Test Home page";
}

<h1>Upload Request (Json) File</h1>
<form method="post" enctype="multipart/form-data" asp-page-handler="Upload" id="uploadForm">
    <input type="file" name="JsonFile" onchange="document.getElementById('uploadForm').submit();" />
</form>

    <div class="button-container" id="buttonContainerBottom">
        <form method="post" asp-page-handler="GenerateDraftReport" onsubmit="showSpinner()">
            <button type="submit" disabled>Generate Draft Report</button>
        </form>

        <form method="post" asp-page-handler="PriorReportSummarization" onsubmit="showSpinner()">
            <button type="submit" disabled>Prior Report Summarization</button>
        </form>
    </div>

@if (Model.InputJson != null || Model.ResponseJson != null)
{
    <div class="splitter">
        <div class="splitter-left">
            <h2>Input JSON</h2>
            <pre id="inputJsonContent">@Model.InputJson</pre>
        </div>
        <div class="splitter-right">
            <h2>Response JSON  @Model.LastAction </h2>
            <pre>@Model.ResponseJson</pre>
        </div>
    </div>

    <div class="button-container" id="buttonContainerBottom">
        <form method="post" asp-page-handler="GenerateDraftReport" onsubmit="showSpinner()">
            <button type="submit" disabled>Generate Draft Report</button>
        </form>

        <form method="post" asp-page-handler="PriorReportSummarization" onsubmit="showSpinner()">
            <button type="submit" disabled>Prior Report Summarization</button>
        </form>
    </div>

    <form method="post" asp-page-handler="Clear">
        <button type="submit">Clear</button>
    </form>
}

<div id="spinner" class="spinner" style="display: none;"></div>

<style>
    .splitter {
        display: flex;
        justify-content: space-between;
    }
    .splitter-left, .splitter-right {
        flex: 1;
        padding: 10px;
        border: 1px solid #ccc;
        margin: 5px;
        text-align: left;
    }
    .splitter-left {
        border-right: none;
    }
    pre {
        white-space: pre-wrap;
        max-width: 120ch; /* 120 characters */
        overflow-wrap: break-word;
    }
        .button-container {
        display: flex;
        gap: 10px; /* Add space between buttons */
        margin-top: 10px; /* Add some margin to the top */
    }
    .spinner {
        position: fixed;
        top: 50%;
        left: 50%;
        width: 50px;
        height: 50px;
        border: 5px solid rgba(0, 0, 0, 0.1);
        border-top: 5px solid #000;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }
    @@keyframes spin {
        0% { transform: translate(-50%, -50%) rotate(0deg); }
        100% { transform: translate(-50%, -50%) rotate(360deg); }
    }
</style>

<script>
    function showSpinner() {
        document.getElementById('spinner').style.display = 'block';
    }

    document.addEventListener("DOMContentLoaded", function() {
        var inputJsonContent = document.getElementById("inputJsonContent")?.innerText.trim();
        var buttonContainers = document.querySelectorAll(".button-container");

        buttonContainers.forEach(function(container) {
            var buttons = container.querySelectorAll("button");
            buttons.forEach(function(button) {
                button.disabled = !inputJsonContent;
            });
        });
    });
</script>